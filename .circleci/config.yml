version: 2.1
orbs:
  python: circleci/python@1.5.0
  heroku: circleci/heroku@1.2.6

commands:
  restore_cache_cmd:
    steps:
      - restore_cache:
          name: Restore project's cache
          key: 
            -py_cache-v2-{{ checksum "requirements.txt" }}
            -py_cache-v2-

  save_cache_cmd:
    steps:
      - save_cache:
          name: "save cahce"
          key: py_cache-v2-{{ checksum "requirements.txt" }}
          paths:
            - /home/circleci/py_cache            

  build:
    steps:
      - checkout
      - restore_cache_cmd
      - python/install-packages:
          pkg-manager: pipenv
      - save_cache_cmd


executors:
  my-executor:
    docker:
      - image: cimg/python:3.10.1
        environment:
          DATABASE_URL: postgresql://root@localhost/circle_test?sslmode=disable
      - image: circleci/postgres:9.6.2
        environment:
          POSTGRES_USER: root
          POSTGRES_DB: circle_test
          
jobs:
  build_and_test: # this can be any name you choose
    executor: my-executor
    resource_class: medium
    #parallelism: 2
    steps:
      - build
      - run:
          name: Run tests
          command: |
             pipenv run python manage.py test
      
 
  deploy: # this can be any name you choose
    docker:
      - image: cimg/python:3.10.1
    steps:
      - build
      - heroku/deploy-via-git: 
          force: true # force push when pushing to the heroku remote, see: https://devcenter.heroku.com/articles/git

workflows:
  on_commit:
    jobs:
      - build_and_test
      # Follow instructions here to authenticate git for Heroku: https://devcenter.heroku.com/articles/git#http-git-authentication
      # The following code may be uncommented, onnce HEROKU_API_KEY & HEROKU_APP_NAME environemnt variables are present
      # Read more: https://circleci.com/docs/2.0/env-vars/
      # - deploy:
      #     requires:
      #       - build_and_test # only deploy if the build_and_test job has completed
      #     filters:
      #       branches:
      #         only: master # only deploy when on main/master
  nightly:
    triggers:
      - schedule:
          cron: "0 0 * * *"       
          filters:
            branches:
              only:
                - master
    jobs:
      - build_and_test
      # Follow instructions here to authenticate git for Heroku: https://devcenter.heroku.com/articles/git#http-git-authentication
      # The following code may be uncommented, onnce HEROKU_API_KEY & HEROKU_APP_NAME environemnt variables are present
      # Read more: https://circleci.com/docs/2.0/env-vars/
      # - deploy:
      #     requires:
      #       - build_and_test # only deploy if the build_and_test job has completed
      #     filters:
      #       branches:
      #         only: master # only deploy when on main/master